server {
  listen 80;

  root /usr/share/nginx/html;

  index index.html;

  # Allow special characters in headers
  ignore_invalid_headers off;
  # Allow any size file to be uploaded.
  # Set to a value such as 1000m; to restrict file size to a specific value
  client_max_body_size 0;
  # Disable buffering
  proxy_buffering off;
  proxy_request_buffering off;

  location / {
    try_files $uri $uri/ /index.html;
    client_max_body_size 20M;
  }

  location /api {
    resolver 127.0.0.11 valid=30s; # Docker DNS
    proxy_pass http://backend:8080/api;
    client_max_body_size 20M;
  }

  location /auth {
    resolver 127.0.0.11 valid=30s;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_pass http://keycloak:3000/auth;
  }

  set $upstream "minio";

  location /minio/ {
    resolver 127.0.0.11 valid=30s;
    proxy_pass http://$upstream:9000/;
    proxy_set_header Host $host;
  }

  location /minio-console/ {
    # This was really the key for me. Even though the Nginx docs say
    # that with a URI part in the `proxy_pass` directive, the `/console/`
    # URI should automatically be rewritten, this wasn't working for me.
    rewrite ^/minio-console/(.*)$ /$1 break;
    resolver 127.0.0.11 valid=30s;
    proxy_pass http://$upstream:9001;

    # To support websocket
    # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    chunked_transfer_encoding off;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;

    proxy_connect_timeout 300;

    # This one rewrite with sub_filter plugin
    sub_filter '<base href="/"/>' '<base href="/minio-console/"/>';
  }
}